// делаем функцию, которая частично применяет аргументы к другим функциям

// сделали функцию для любого числа аргументов
const partial = (fn, ...args) => (...rest) => fn(...args.concat(rest))

// Usage

const sum4 = (a, b, c, d) => (a + b + c + d)

// Создаем функцию f11 в которую передаем функцию суммирования и а=1
const f11 = partial(sum4, 1)
// Создаем функцию f12 в которую закидываем функцию f11
// в которой лежит функция sum4 и первый аргумент a=1
// и добавляем туда аргумент b=2
const f12 = partial(f11, 2)
// джойним в прошлую функцию еще одну с новым аргументом для первой sum4 c=3
const f13 = partial(f12, 3)
// джойним уже последний аргумент к получившейся функции d=4
const y1 = f13(4)
console.log(y1);

// мы не можем джойнить несколько аргументов таким способом
const f21 = partial(sum4, 1, 2)
const f22 = partial(f21, 3)
const y2 = f22(4)
console.log(y2);

const f23 = partial(sum4, 1, 2, 3, 4)
// функция f23 это новая функция которая создается лямбдой partial из функции sum4 и аргументов
// она еще не применилась
console.log(f23);
// применили - посщитали
console.log(f23());
